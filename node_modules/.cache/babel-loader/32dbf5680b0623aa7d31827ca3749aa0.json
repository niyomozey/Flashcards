{"ast":null,"code":"import _slicedToArray from\"/home/christian/Desktop/Codeacademy projects/flashCards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useHistory}from\"react-router-dom\";import{v4 as uuidv4}from\"uuid\";import ROUTES from\"../app/routes\";import{ALL_ICONS}from\"../data/icons\";import{addTopic}from'../features/topics/topicsSlice';import{useDispatch}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function NewTopicForm(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),icon=_useState4[0],setIcon=_useState4[1];var history=useHistory();var dispatch=useDispatch();var handleSubmit=function handleSubmit(e){e.preventDefault();if(name.length===0){return;}var uniqueId=uuidv4();dispatch(addTopic({topicId:uniqueId,name:name,icon:icon}));// dispatch your add topic action here\nhistory.push(ROUTES.topicsRoute());};return/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h1\",{className:\"center\",children:\"Create a new topic\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"topic-name\",type:\"text\",value:name,onChange:function onChange(e){return setName(e.currentTarget.value);},placeholder:\"Topic Name\"}),/*#__PURE__*/_jsxs(\"select\",{onChange:function onChange(e){return setIcon(e.currentTarget.value);},required:true,defaultValue:\"default\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"default\",disabled:true,hidden:true,children:\"Choose an icon\"}),ALL_ICONS.map(function(_ref){var name=_ref.name,url=_ref.url;return/*#__PURE__*/_jsx(\"option\",{value:url,children:name},url);})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"center\",children:\"Add Topic\"})]})});}","map":{"version":3,"sources":["/home/christian/Desktop/Codeacademy projects/flashCards/src/components/NewTopicForm.js"],"names":["React","useState","useHistory","v4","uuidv4","ROUTES","ALL_ICONS","addTopic","useDispatch","NewTopicForm","name","setName","icon","setIcon","history","dispatch","handleSubmit","e","preventDefault","length","uniqueId","topicId","push","topicsRoute","currentTarget","value","map","url"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,EAAE,GAAIC,CAAAA,MAAf,KAA6B,MAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,OAASC,SAAT,KAA0B,eAA1B,CACA,OAASC,QAAT,KAAyB,gCAAzB,CACA,OAASC,WAAT,KAA4B,aAA5B,C,wFAEA,cAAe,SAASC,CAAAA,YAAT,EAAwB,eACbR,QAAQ,CAAC,EAAD,CADK,wCAC9BS,IAD8B,eACxBC,OADwB,8BAEbV,QAAQ,CAAC,EAAD,CAFK,yCAE9BW,IAF8B,eAExBC,OAFwB,eAGrC,GAAMC,CAAAA,OAAO,CAAGZ,UAAU,EAA1B,CACA,GAAMa,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEA,GAAMQ,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACA,GAAIR,IAAI,CAACS,MAAL,GAAgB,CAApB,CAAuB,CACrB,OACD,CACD,GAAIC,CAAAA,QAAQ,CAAGhB,MAAM,EAArB,CACAW,QAAQ,CAACR,QAAQ,CAAC,CACdc,OAAO,CAAED,QADK,CAEdV,IAAI,CAAEA,IAFQ,CAGdE,IAAI,CAAEA,IAHQ,CAAD,CAAT,CAAR,CAMA;AACAE,OAAO,CAACQ,IAAR,CAAajB,MAAM,CAACkB,WAAP,EAAb,EACD,CAdD,CAgBA,mBACE,sCACE,cAAM,QAAQ,CAAEP,YAAhB,wBACE,WAAI,SAAS,CAAC,QAAd,gCADF,cAEE,aAAK,SAAS,CAAC,cAAf,wBACE,cACE,EAAE,CAAC,YADL,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAEN,IAHT,CAIE,QAAQ,CAAE,kBAACO,CAAD,QAAON,CAAAA,OAAO,CAACM,CAAC,CAACO,aAAF,CAAgBC,KAAjB,CAAd,EAJZ,CAKE,WAAW,CAAC,YALd,EADF,cAQE,gBACE,QAAQ,CAAE,kBAACR,CAAD,QAAOJ,CAAAA,OAAO,CAACI,CAAC,CAACO,aAAF,CAAgBC,KAAjB,CAAd,EADZ,CAEE,QAAQ,KAFV,CAGE,YAAY,CAAC,SAHf,wBAKE,eAAQ,KAAK,CAAC,SAAd,CAAwB,QAAQ,KAAhC,CAAiC,MAAM,KAAvC,4BALF,CAQGnB,SAAS,CAACoB,GAAV,CAAc,kBAAGhB,CAAAA,IAAH,MAAGA,IAAH,CAASiB,GAAT,MAASA,GAAT,oBACb,eAAkB,KAAK,CAAEA,GAAzB,UACGjB,IADH,EAAaiB,GAAb,CADa,EAAd,CARH,GARF,GAFF,cAyBE,eAAQ,SAAS,CAAC,QAAlB,uBAzBF,GADF,EADF,CA+BD","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { ALL_ICONS } from \"../data/icons\";\nimport { addTopic } from '../features/topics/topicsSlice';\nimport { useDispatch } from \"react-redux\";\n\nexport default function NewTopicForm() {\n  const [name, setName] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n    let uniqueId = uuidv4();\n    dispatch(addTopic({\n        topicId: uniqueId,\n        name: name,\n        icon: icon\n      }));\n\n    // dispatch your add topic action here\n    history.push(ROUTES.topicsRoute());\n  };\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <h1 className=\"center\">Create a new topic</h1>\n        <div className=\"form-section\">\n          <input\n            id=\"topic-name\"\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.currentTarget.value)}\n            placeholder=\"Topic Name\"\n          />\n          <select\n            onChange={(e) => setIcon(e.currentTarget.value)}\n            required\n            defaultValue=\"default\"\n          >\n            <option value=\"default\" disabled hidden>\n              Choose an icon\n            </option>\n            {ALL_ICONS.map(({ name, url }) => (\n              <option key={url} value={url}>\n                {name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button className=\"center\">Add Topic</button>\n      </form>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}