{"ast":null,"code":"import _slicedToArray from\"/home/christian/Desktop/Codeacademy projects/flashCards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useHistory}from\"react-router-dom\";import{v4 as uuidv4}from\"uuid\";import ROUTES from\"../app/routes\";import{selectTopics}from'../features/topics/topicsSlice';import{addQuizAddQuizId}from'../features/quizzes/quizzesSlice';import{addCard}from'../features/cards/cardsSlice';import{useDispatch,useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function NewQuizForm(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),cards=_useState4[0],setCards=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),topicId=_useState6[0],setTopicId=_useState6[1];var history=useHistory();var topics=useSelector(selectTopics);var dispatch=useDispatch();var handleSubmit=function handleSubmit(e){e.preventDefault();if(name.length===0){return;}var cardIds=[];// create the new cards here and add each card's id to cardIds\n// create the new quiz here\ncards.forEach(function(card){var cardId=uuidv4();cardIds.push(cardId);dispatch(addCard({cardId:cardId,front:card.front,back:card.back}));});dispatch(addQuizAddQuizId({quizId:uuidv4(),name:name,topicId:topicId,cardIds:cardIds}));history.push(ROUTES.quizzesRoute());};var addCardInputs=function addCardInputs(e){e.preventDefault();setCards(cards.concat({front:\"\",back:\"\"}));};var removeCard=function removeCard(e,index){e.preventDefault();setCards(cards.filter(function(card,i){return index!==i;}));};var updateCardState=function updateCardState(index,side,value){var newCards=cards.slice();newCards[index][side]=value;setCards(newCards);};return/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create a new quiz\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{id:\"quiz-name\",value:name,onChange:function onChange(e){return setName(e.currentTarget.value);},placeholder:\"Quiz Title\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"quiz-topic\",onChange:function onChange(e){return setTopicId(e.currentTarget.value);},placeholder:\"Topic\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Topic\"}),Object.values(topics).map(function(topic){return/*#__PURE__*/_jsx(\"option\",{value:topic.id,children:topic.name},topic.id);})]}),cards.map(function(card,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"card-front-back\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"card-front-\".concat(index),value:cards[index].front,onChange:function onChange(e){return updateCardState(index,\"front\",e.currentTarget.value);},placeholder:\"Front\"}),/*#__PURE__*/_jsx(\"input\",{id:\"card-back-\".concat(index),value:cards[index].back,onChange:function onChange(e){return updateCardState(index,\"back\",e.currentTarget.value);},placeholder:\"Back\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){return removeCard(e,index);},className:\"remove-card-button\",children:\"Remove Card\"})]},index);}),/*#__PURE__*/_jsxs(\"div\",{className:\"actions-container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:addCardInputs,children:\"Add a Card\"}),/*#__PURE__*/_jsx(\"button\",{children:\"Create Quiz\"})]})]})]});}","map":{"version":3,"sources":["/home/christian/Desktop/Codeacademy projects/flashCards/src/components/NewQuizForm.js"],"names":["React","useState","useHistory","v4","uuidv4","ROUTES","selectTopics","addQuizAddQuizId","addCard","useDispatch","useSelector","NewQuizForm","name","setName","cards","setCards","topicId","setTopicId","history","topics","dispatch","handleSubmit","e","preventDefault","length","cardIds","forEach","card","cardId","push","front","back","quizId","quizzesRoute","addCardInputs","concat","removeCard","index","filter","i","updateCardState","side","value","newCards","slice","currentTarget","Object","values","map","topic","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\nimport { selectTopics } from '../features/topics/topicsSlice';\nimport { addQuizAddQuizId } from '../features/quizzes/quizzesSlice';\nimport { addCard } from '../features/cards/cardsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const history = useHistory();\n  const topics = useSelector(selectTopics);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n    \n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    // create the new quiz here\n    cards.forEach((card) => {\n\t\t\tlet cardId = uuidv4();\n\t\t\tcardIds.push(cardId);\n\t\t\tdispatch(addCard({ cardId: cardId, front: card.front, back: card.back }));\n\t\t});\n\n    \n    dispatch(addQuizAddQuizId({quizId: uuidv4(), name: name, topicId: topicId, cardIds: cardIds}));\n\n\n    history.push(ROUTES.quizzesRoute());\n  };\n\n  const addCardInputs = (e) => {\n    e.preventDefault();\n    setCards(cards.concat({ front: \"\", back: \"\" }));\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n\n  return (\n    <section>\n      <h1>Create a new quiz</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"quiz-name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          placeholder=\"Quiz Title\"\n        />\n        <select\n          id=\"quiz-topic\"\n          onChange={(e) => setTopicId(e.currentTarget.value)}\n          placeholder=\"Topic\"\n        >\n          <option value=\"\">Topic</option>\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n        {cards.map((card, index) => (\n          <div key={index} className=\"card-front-back\">\n            <input\n              id={`card-front-${index}`}\n              value={cards[index].front}\n              onChange={(e) =>\n                updateCardState(index, \"front\", e.currentTarget.value)\n              }\n              placeholder=\"Front\"\n            />\n\n            <input\n              id={`card-back-${index}`}\n              value={cards[index].back}\n              onChange={(e) =>\n                updateCardState(index, \"back\", e.currentTarget.value)\n              }\n              placeholder=\"Back\"\n            />\n\n            <button\n              onClick={(e) => removeCard(e, index)}\n              className=\"remove-card-button\"\n            >\n              Remove Card\n            </button>\n          </div>\n        ))}\n        <div className=\"actions-container\">\n          <button onClick={addCardInputs}>Add a Card</button>\n          <button>Create Quiz</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}