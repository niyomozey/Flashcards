{"ast":null,"code":"import React from\"react\";import{BrowserRouter as Router,Switch,Route,NavLink,useRouteMatch}from\"react-router-dom\";import NewQuizForm from\"../components/NewQuizForm\";import NewTopicForm from\"../components/NewTopicForm\";import Topics from\"../features/topics/Topics\";import Topic from\"../features/topics/Topic\";import Quiz from\"../features/quizzes/Quiz\";import Quizzes from\"../features/quizzes/Quizzes\";import ROUTES from\"./routes\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function App(){return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{to:ROUTES.topicsRoute(),activeClassName:\"active\",children:\"Topics\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{to:ROUTES.quizzesRoute(),activeClassName:\"active\",children:\"Quizzes\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{to:ROUTES.newQuizRoute(),activeClassName:\"active\",children:\"New Quiz\"})})]})}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/topics\",children:/*#__PURE__*/_jsx(TopicsRoutes,{})}),/*#__PURE__*/_jsx(Route,{path:\"/quizzes\",children:/*#__PURE__*/_jsx(QuizRoutes,{})})]})]});}function TopicsRoutes(){var match=useRouteMatch();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/new\"),children:/*#__PURE__*/_jsx(NewTopicForm,{})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/:topicId\"),children:/*#__PURE__*/_jsx(Topic,{})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path),children:/*#__PURE__*/_jsx(Topics,{})})]})});}function QuizRoutes(){var match=useRouteMatch();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/new\"),children:/*#__PURE__*/_jsx(NewQuizForm,{})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/:quizId\"),children:/*#__PURE__*/_jsx(Quiz,{})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path),children:/*#__PURE__*/_jsx(Quizzes,{})})]})});}","map":{"version":3,"sources":["/home/christian/Desktop/Codeacademy projects/flashCards/src/app/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","NavLink","useRouteMatch","NewQuizForm","NewTopicForm","Topics","Topic","Quiz","Quizzes","ROUTES","App","topicsRoute","quizzesRoute","newQuizRoute","TopicsRoutes","match","path","QuizRoutes"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,aAAa,GAAIC,CAAAA,MADnB,CAEEC,MAFF,CAGEC,KAHF,CAIEC,OAJF,CAKEC,aALF,KAMO,kBANP,CAOA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,2BAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,0BAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,6BAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,6IAEA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAC5B,mBACE,MAAC,MAAD,yBACE,kCACE,mCACE,iCACE,KAAC,OAAD,EAAS,EAAE,CAAED,MAAM,CAACE,WAAP,EAAb,CAAmC,eAAe,CAAC,QAAnD,oBADF,EADF,cAME,iCACE,KAAC,OAAD,EAAS,EAAE,CAAEF,MAAM,CAACG,YAAP,EAAb,CAAoC,eAAe,CAAC,QAApD,qBADF,EANF,cAWE,iCACE,KAAC,OAAD,EAAS,EAAE,CAAEH,MAAM,CAACI,YAAP,EAAb,CAAoC,eAAe,CAAC,QAApD,sBADF,EAXF,GADF,EADF,cAqBE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,uBACE,KAAC,YAAD,IADF,EADF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,uBACE,KAAC,UAAD,IADF,EAJF,GArBF,GADF,CAgCD,CAED,QAASC,CAAAA,YAAT,EAAwB,CACtB,GAAIC,CAAAA,KAAK,CAAGb,aAAa,EAAzB,CAEA,mBACE,sCACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,WAAKa,KAAK,CAACC,IAAX,QAAX,uBACE,KAAC,YAAD,IADF,EADF,cAIE,KAAC,KAAD,EAAO,IAAI,WAAKD,KAAK,CAACC,IAAX,aAAX,uBACE,KAAC,KAAD,IADF,EAJF,cAOE,KAAC,KAAD,EAAO,IAAI,WAAKD,KAAK,CAACC,IAAX,CAAX,uBACE,KAAC,MAAD,IADF,EAPF,GADF,EADF,CAeD,CAED,QAASC,CAAAA,UAAT,EAAsB,CACpB,GAAIF,CAAAA,KAAK,CAAGb,aAAa,EAAzB,CAEA,mBACE,sCACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,WAAKa,KAAK,CAACC,IAAX,QAAX,uBACE,KAAC,WAAD,IADF,EADF,cAIE,KAAC,KAAD,EAAO,IAAI,WAAKD,KAAK,CAACC,IAAX,YAAX,uBACE,KAAC,IAAD,IADF,EAJF,cAOE,KAAC,KAAD,EAAO,IAAI,WAAKD,KAAK,CAACC,IAAX,CAAX,uBACE,KAAC,OAAD,IADF,EAPF,GADF,EADF,CAeD","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport NewQuizForm from \"../components/NewQuizForm\";\nimport NewTopicForm from \"../components/NewTopicForm\";\nimport Topics from \"../features/topics/Topics\";\nimport Topic from \"../features/topics/Topic\";\nimport Quiz from \"../features/quizzes/Quiz\";\nimport Quizzes from \"../features/quizzes/Quizzes\";\nimport ROUTES from \"./routes\";\n\nexport default function App() {\n  return (\n    <Router>\n      <nav>\n        <ul>\n          <li>\n            <NavLink to={ROUTES.topicsRoute()} activeClassName=\"active\">\n              Topics\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={ROUTES.quizzesRoute()} activeClassName=\"active\">\n              Quizzes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={ROUTES.newQuizRoute()} activeClassName=\"active\">\n              New Quiz\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n\n      <Switch>\n        <Route path=\"/topics\">\n          <TopicsRoutes />\n        </Route>\n        <Route path=\"/quizzes\">\n          <QuizRoutes />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction TopicsRoutes() {\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <Switch>\n        <Route path={`${match.path}/new`}>\n          <NewTopicForm />\n        </Route>\n        <Route path={`${match.path}/:topicId`}>\n          <Topic />\n        </Route>\n        <Route path={`${match.path}`}>\n          <Topics />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nfunction QuizRoutes() {\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <Switch>\n        <Route path={`${match.path}/new`}>\n          <NewQuizForm />\n        </Route>\n        <Route path={`${match.path}/:quizId`}>\n          <Quiz />\n        </Route>\n        <Route path={`${match.path}`}>\n          <Quizzes />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}